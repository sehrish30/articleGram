import {useState, useEffect, useCallback} from 'react';
import axios from 'axios'
import useLocalStorage from 'hooks/useLocalStorage'

export default url=>{
    const baseUrl='https://conduit.productionready.io/api'
    const [isLoading, setIsLoading] =useState(false);
    const [response, setResponse]= useState(null);
    const [error, setError] =useState(null);
    const [options, setOptions]=useState({});
    const [token]= useLocalStorage('token');


    //usecallback means with no dependency react will always call same instance of array
    const doFetch=useCallback((options={})=>{
        //This shows programmer wants to access url
        //Options for headers or post get
        setOptions(options);
        setIsLoading(true);
    },[])

    
    useEffect(()=>{    
      if(!isLoading){
          //block extra renders
       return
      }

      const requestOptions ={
          ...options,
          ...{
              headers: {
                  authorization: token ? `Token ${token}`:''
              }
          }
      }

        axios(`${baseUrl}${url}`, requestOptions)
        .then(res=>{   
            setResponse(res.data);
            setIsLoading(false);
        })
        .catch(error=>{
            
            setError(error.response.data);
            setIsLoading(false);
        })
    }, [isLoading, url, options, token])

    return [{isLoading, response, error}, doFetch];
}