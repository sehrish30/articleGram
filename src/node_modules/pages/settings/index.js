import React, {useState, useEffect} from 'react'
import {Redirect} from 'react-router-dom'
import { CurrentUserContext } from '../../../contexts/currentUser';
import useFetch from 'hooks/useFetch';
import useLocalStorage from 'hooks/useLocalStorage'
import BackendErrorMessages from '../authentication/components/backendErrorMessages'


const Settings = () => {

    const apiUrl='/user';
    const [{response, error}, doFetch]=useFetch(apiUrl);
    const [name, setName]= useState('');
    const [image, setImage]=useState('');
    const [bio, setBio]=useState('');
    const [email, setEmail]=useState('');
    const [password, setPassword]=useState('');
    const [currentUserState, dispatch]=useState(CurrentUserContext);
    const [,setToken]=useLocalStorage('token');
    const [successfullLogout, setIsSuccessfullLogout]= useState(false);

    console.log('userstate',currentUserState);

    //functions
    const handleSubmit =(event)=>{
        event.preventDefault();
        console.log('handleSubmit', image, name, bio, email, password);
        doFetch({
            method: 'put',
            data:{
                user: {...currentUserState.currentUser, image, bio, username: name, email, password}
            }
        })
    }
    const logout=(event)=>{
        event.preventDefault();
        setToken('');
        dispatch({type: 'SET_UNAUTHORIZED'});
        setIsSuccessfullLogout(true);
    }

    useEffect(() => {
       if(!currentUserState.currentUser){
           return
       }
       const cUser= currentUserState.currentUser
       setName(cUser.username)
       setImage(cUser.currentUser.image)
       setBio(cUser.bio)
       setEmail(cUser.email)
    }, [currentUserState.currentUser])

    useEffect(()=>{
     if(!response){
         return null
     }
     //overwrite the state of the user with the data we got from user
     dispatch({type: 'SET_AUTHORIZED', payload: response.user})
    },[response, dispatch])

    if(successfullLogout){
        return <Redirect to="/"/>
    }

    return (
        <div className='settings-page'>
            <div className='container page'>
                <div className='row'>
                    <div className='col-md-6 offset-md-3 col-xs-12'>
                       <h1 className='text-xs-center'>Your Settings</h1>
                       {error && <BackendErrorMessages backendErrors={error.errors} />}
                       <form onSubmit={handleSubmit}>
                         <fieldset>
                             <fieldset className='form-group'>
                                 <input type='text' className='form-control form-control-lg'
                                  placeholder='URL of profile pic' 
                                 value={image} onChange={e=> setImage(e.target.value)}/>
                             </fieldset>

                             <fieldset className='form-group'>
                                 <input type='text' className='form-control form-control-lg'
                                  placeholder='Username' 
                                 value={name} onChange={e=> setName(e.target.value)}/>
                             </fieldset>

                             <fieldset className='form-group'>
                                 <textarea type='text' rows="8" className='form-control form-control-lg'
                                  placeholder='Short bio' 
                                 value={bio} onChange={e=> setBio(e.target.value)}></textarea>
                             </fieldset>

                             <fieldset className='form-group'>
                                 <input type='Email' className='form-control form-control-lg'
                                  placeholder='Username' 
                                 value={email} onChange={e=> setEmail(e.target.value)}/>
                             </fieldset>

                             <fieldset className='form-group'>
                                 <input type='password' className='form-control form-control-lg'
                                  placeholder="New password"
                                 value={password} onChange={e=> setPassword(e.target.value)}/>
                             </fieldset>

                             <button type='submit' className='btn btn-lg btn-primary pull-xs-right'>
                                 Update settings
                             </button>

                         </fieldset>
                       </form>
                       <hr />
                        <button className="btn btn-outline-danger" onClick={logout}>
                          Logout
                        </button>
                    </div>
                </div>
            </div>
        </div>
    )
}

export default Settings
