{"version":3,"sources":["index.js","contexts/currentUser.js"],"names":["App","ReactDOM","render","document","getElementById","initialState","isLoading","isLoggedIn","currrentUser","reducer","state","action","type","currentUser","payload","CurrentUserContext","createContext","CurrentUserProvider","children","value","useReducer","Provider"],"mappings":"+IAAA,kFAsBMA,EAAM,WACV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,UAOKA,YAEfC,IAASC,OAAO,kBAACF,EAAD,MAASG,SAASC,eAAe,U,+HCnC3CC,EAAe,CACnBC,WAAW,EACXC,WAAY,KACZC,aAAc,MAIVC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,UACH,OAAO,2BAAKF,GAAZ,IAAmBJ,WAAW,IAChC,IAAK,iBACH,OAAO,2BACFI,GADL,IAEEH,YAAY,EACZD,WAAW,EACXO,YAAaF,EAAOG,UAExB,IAAK,mBACH,OAAO,2BACFJ,GADL,IAEEH,YAAY,EACZM,YAAa,OAEjB,QACE,OAAOH,IAMAK,EAAqBC,0BAErBC,EAAsB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9BC,EAAQC,qBAAWX,EAASJ,GAOlC,OACE,kBAACU,EAAmBM,SAApB,CAA6BF,MAAOA,GACjCD,M","file":"static/js/main.0924d835.chunk.js","sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import App from './App';\n// // import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Routes from 'routes';\nimport Topbar from 'components/topbar';\n\nimport { HashRouter as Router } from 'react-router-dom';\nimport { CurrentUserProvider } from './contexts/currentUser';\nimport CurrentUserChecker from 'pages/authentication/components/currentUserChecker.js';\n\nconst App = () => {\n  return (\n    <CurrentUserProvider>\n      <CurrentUserChecker>\n        <Router>\n          <Topbar />\n          <Routes />\n        </Router>\n      </CurrentUserChecker>\n    </CurrentUserProvider>\n  );\n};\n\nexport default App;\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","import React, { createContext, useReducer } from 'react';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isLoggedIn: null,\r\n  currrentUser: null,\r\n};\r\n\r\n//reducer for different states\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOADING':\r\n      return { ...state, isLoading: true };\r\n    case 'SET_AUTHROIZED':\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        isLoading: false,\r\n        currentUser: action.payload,\r\n      };\r\n    case 'SET_UNAUTHORIZED':\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        currentUser: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// [{}, () => {}]\r\n// Before argument this was parameter\r\nexport const CurrentUserContext = createContext();\r\n\r\nexport const CurrentUserProvider = ({ children }) => {\r\n  const value = useReducer(reducer, initialState);\r\n  // const [state, setState] = useState({\r\n  //   isLoading: false,\r\n  //   isLoggedIn: null,\r\n  //   currrentUser: null,\r\n  // });\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={value}>\r\n      {children}\r\n    </CurrentUserContext.Provider>\r\n  );\r\n};\r\n"],"sourceRoot":""}